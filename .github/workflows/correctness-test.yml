name: Correctness Test for goid

on:
  workflow_dispatch:

jobs:
  test-linux-amd64:
    strategy:
      fail-fast: false
      matrix:
        go-version: ['1.21', '1.22', '1.23', '1.24']

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: false

      - name: Build
        run: go build -v ./...

      - name: Run tests
        run: go test -v -bench=. ./...

  test-linux-arm64:
    strategy:
      fail-fast: false
      matrix:
        go-version: ['1.21', '1.22', '1.23', '1.24']

    runs-on: ubuntu-24.04-arm

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: false

      - name: Build
        run: go build -v ./...

      - name: Run tests
        run: go test -v -bench=. ./...

  test-linux-armv7:
    strategy:
      fail-fast: false
      matrix:
        go-version: ['1.21.13', '1.22.12', '1.23.10', '1.24.4'] # need patch versions for armv7 downloads

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install QEMU
        uses: docker/setup-qemu-action@v3

      - name: Run tests (armv7 emulated)
        uses: uraimo/run-on-arch-action@v3
        with:
          arch: armv7
          distro: bookworm
          dockerRunArgs: |
            --volume "${PWD}:/go/src/app"
          run: |
            apt update && apt install -y wget
            wget https://golang.org/dl/go${{ matrix.go-version }}.linux-armv6l.tar.gz
            rm -rf /usr/local/go
            tar -C /usr/local -xzf go${{ matrix.go-version }}.linux-armv6l.tar.gz
            export PATH=/usr/local/go/bin:$PATH
            export GOARCH=arm
            export GOARM=7
            cd /go/src/app
            go test -v -bench=. ./...

  test-darwin-amd64:
    strategy:
      fail-fast: false
      matrix:
        go-version: ['1.21', '1.22', '1.23', '1.24']

    runs-on: macos-13

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: false

      - name: Build
        run: go build -v ./...

      - name: Run tests
        run: go test -v -bench=. ./...

  test-darwin-arm64:
    strategy:
      fail-fast: false
      matrix:
        go-version: ['1.21', '1.22', '1.23', '1.24']

    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: false

      - name: Build
        run: go build -v ./...

      - name: Run tests
        run: go test -v -bench=. ./...

  test-windows:
    strategy:
      fail-fast: false
      matrix:
        go-version: ['1.21', '1.22', '1.23', '1.24']
        arch: [amd64, 386]

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: false

      - name: Configure architecture
        run: |
          if ("${{ matrix.arch }}" -eq "amd64") { echo "GOARCH=amd64" | Out-File -FilePath $env:GITHUB_ENV -Append }
          elseif ("${{ matrix.arch }}" -eq "386") { echo "GOARCH=386" | Out-File -FilePath $env:GITHUB_ENV -Append }

      - name: Build
        run: go build -v ./...

      - name: Run tests
        run: go test -v -bench="." ./...
